 r←{parms_}Log y;buff;cmd;msg;rc;⎕TRAP;path;parms
⍝ Returns the log of commits.\\
⍝ The result depends on `verbose`; if it is 0 (the default):
⍝  * r is a matrix with four columns and zero to many rows:\\
⍝    1. Hash of the commit
⍝    2. Author
⍝    3. Timestamp
⍝    4. Message; multi-line messages are compressed
⍝  * r is a one-column matrix
⍝ With the optional `since` you can limit the result by date: YYY-MM-DD.\\
⍝ `y` must be one of:
⍝   * Fully qualfied name of a namespace  that is an opened Cider project
⍝   * Fully qualified path to a Git-managed project
 ⎕TRAP←(811 'E' '⎕DMX.EM ⎕signal 811')(0 'N')
 r←''
 path←U.GetProjectPath y
 parms←⎕NS''
 parms.since←''
 parms.verbose←0
 :If 9=⎕NC'parms_'
     'parms'⎕NS parms_
 :EndIf
 :If ~∧/(parms.⎕NL-2)∊'since' 'verbose'
     811 ⎕SIGNAL⍨'Invalid parameters: ',⊃{⍺,',',⍵}/(parms.⎕NL-2)~'since' 'verbose'
 :EndIf
 cmd←'log '
 cmd,←(0<≢parms.since)/'--since=',parms.since,' '
 cmd,←(0=parms.verbose)/' --pretty=format:"',U.GetLogFormat,'"'
 (rc msg buff)←U.RunGitCommand path cmd
 msg U.Assert 0=rc
 :If parms.verbose
     r←⍪buff
 :Else
     :If 0=≢buff
         r←0 4⍴''
     :Else
         r←↑U.FormatLog buff
     :EndIf
 :EndIf
⍝Done
